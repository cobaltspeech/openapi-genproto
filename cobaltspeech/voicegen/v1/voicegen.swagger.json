{
  "swagger": "2.0",
  "info": {
    "title": "cobaltspeech/voicegen/v1/voicegen.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "VoiceGenService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/voicegen/v1/list-models": {
      "get": {
        "summary": "ListModels returns information about the models the server can access.",
        "operationId": "VoiceGenService_ListModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListModelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VoiceGenService"
        ]
      }
    },
    "/api/voicegen/v1/streaming-synthesize": {
      "get": {
        "summary": "Performs text to speech synthesis and stream synthesized audio. This\nmethod is only available via GRPC and not via HTTP+JSON. However, a\nweb browser may use websockets to use this service.",
        "operationId": "VoiceGenService_StreamingSynthesize",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1StreamingSynthesizeResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1StreamingSynthesizeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "config.modelId",
            "description": "Unique identifier of the model to use, as obtained from a `ModelInfo` message.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "config.speakerId",
            "description": "Unique identifier of the speaker to use, as obtained from a `SpeakerInfo` message.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "config.audioFormat.sampleRate",
            "description": "Sampling rate in Hz.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.channels",
            "description": "Number of channels present in the audio. E.g.: 1 (mono), 2 (stereo), etc.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.bitDepth",
            "description": "Bit depth of each sample (e.g. 8, 16, 24, 32, etc.).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.codec",
            "description": "Codec of the samples.\n\n - AUDIO_CODEC_UNSPECIFIED: AUDIO_CODEC_UNSPECIFIED is the default value of this type.\n - AUDIO_CODEC_RAW: Raw data without any headers\n - AUDIO_CODEC_WAV: WAV with RIFF headers",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDIO_CODEC_UNSPECIFIED",
              "AUDIO_CODEC_RAW",
              "AUDIO_CODEC_WAV"
            ],
            "default": "AUDIO_CODEC_UNSPECIFIED"
          },
          {
            "name": "config.audioFormat.encoding",
            "description": "Encoding of the samples.\n\n - AUDIO_ENCODING_UNSPECIFIED: AUDIO_ENCODING_UNSPECIFIED is the default value of this type and will\nresult in an error.\n - AUDIO_ENCODING_SIGNED: PCM signed-integer\n - AUDIO_ENCODING_UNSIGNED: PCM unsigned-integer\n - AUDIO_ENCODING_IEEE_FLOAT: PCM IEEE-Float\n - AUDIO_ENCODING_ULAW: G.711 mu-law\n - AUDIO_ENCODING_ALAW: G.711 a-law",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDIO_ENCODING_UNSPECIFIED",
              "AUDIO_ENCODING_SIGNED",
              "AUDIO_ENCODING_UNSIGNED",
              "AUDIO_ENCODING_IEEE_FLOAT",
              "AUDIO_ENCODING_ULAW",
              "AUDIO_ENCODING_ALAW"
            ],
            "default": "AUDIO_ENCODING_UNSPECIFIED"
          },
          {
            "name": "config.audioFormat.byteOrder",
            "description": "Byte order of the samples. This field must be set to a value other than\n`BYTE_ORDER_UNSPECIFIED` when the `bit_depth` is greater than 8.\n\n - BYTE_ORDER_UNSPECIFIED: BYTE_ORDER_UNSPECIFIED is the default value of this type.\n - BYTE_ORDER_LITTLE_ENDIAN: Little Endian byte order\n - BYTE_ORDER_BIG_ENDIAN: Big Endian byte order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BYTE_ORDER_UNSPECIFIED",
              "BYTE_ORDER_LITTLE_ENDIAN",
              "BYTE_ORDER_BIG_ENDIAN"
            ],
            "default": "BYTE_ORDER_UNSPECIFIED"
          },
          {
            "name": "config.speechRate",
            "description": "The speech rate for synthesized audio. If unset, then the default speech rate of\na given model is used. Otherwise a value \u003e 0 should be used, with higher values\nresulting in faster speech. This field only has an effect on the synthesized audio\nif the model supports it, which can be ascertained from the\n`ModelAttributes.supported_features`.",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "config.variationScale",
            "description": "A scale with values \u003e 0, to determine how much to randomly vary the synthesized\naudio by altering stresses and emphasis on different parts of the audio. Higher\nvalues correspond to greater variation. This field only has an affect on the\nsynthesized audio if the model supports it, which can be ascertained from the\n`ModelAttributes.supported_features`.",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "text.text",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VoiceGenService"
        ]
      }
    },
    "/api/voicegen/v1/version": {
      "get": {
        "summary": "Returns version information from the server.",
        "operationId": "VoiceGenService_Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VoiceGenService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AudioCodec": {
      "type": "string",
      "enum": [
        "AUDIO_CODEC_UNSPECIFIED",
        "AUDIO_CODEC_RAW",
        "AUDIO_CODEC_WAV"
      ],
      "default": "AUDIO_CODEC_UNSPECIFIED",
      "description": "The encoding of the audio data to be sent for synthesis.\n\n - AUDIO_CODEC_UNSPECIFIED: AUDIO_CODEC_UNSPECIFIED is the default value of this type.\n - AUDIO_CODEC_RAW: Raw data without any headers\n - AUDIO_CODEC_WAV: WAV with RIFF headers"
    },
    "v1AudioEncoding": {
      "type": "string",
      "enum": [
        "AUDIO_ENCODING_UNSPECIFIED",
        "AUDIO_ENCODING_SIGNED",
        "AUDIO_ENCODING_UNSIGNED",
        "AUDIO_ENCODING_IEEE_FLOAT",
        "AUDIO_ENCODING_ULAW",
        "AUDIO_ENCODING_ALAW"
      ],
      "default": "AUDIO_ENCODING_UNSPECIFIED",
      "description": "The encoding of the audio data to be sent for synthesis.\n\n - AUDIO_ENCODING_UNSPECIFIED: AUDIO_ENCODING_UNSPECIFIED is the default value of this type and will\nresult in an error.\n - AUDIO_ENCODING_SIGNED: PCM signed-integer\n - AUDIO_ENCODING_UNSIGNED: PCM unsigned-integer\n - AUDIO_ENCODING_IEEE_FLOAT: PCM IEEE-Float\n - AUDIO_ENCODING_ULAW: G.711 mu-law\n - AUDIO_ENCODING_ALAW: G.711 a-law"
    },
    "v1AudioFormat": {
      "type": "object",
      "properties": {
        "sampleRate": {
          "type": "integer",
          "format": "int64",
          "description": "Sampling rate in Hz."
        },
        "channels": {
          "type": "integer",
          "format": "int64",
          "description": "Number of channels present in the audio. E.g.: 1 (mono), 2 (stereo), etc."
        },
        "bitDepth": {
          "type": "integer",
          "format": "int64",
          "description": "Bit depth of each sample (e.g. 8, 16, 24, 32, etc.)."
        },
        "codec": {
          "$ref": "#/definitions/v1AudioCodec",
          "description": "Codec of the samples."
        },
        "encoding": {
          "$ref": "#/definitions/v1AudioEncoding",
          "description": "Encoding of the samples."
        },
        "byteOrder": {
          "$ref": "#/definitions/v1ByteOrder",
          "description": "Byte order of the samples. This field must be set to a value other than\n`BYTE_ORDER_UNSPECIFIED` when the `bit_depth` is greater than 8."
        }
      },
      "title": "Details of audio in format"
    },
    "v1ByteOrder": {
      "type": "string",
      "enum": [
        "BYTE_ORDER_UNSPECIFIED",
        "BYTE_ORDER_LITTLE_ENDIAN",
        "BYTE_ORDER_BIG_ENDIAN"
      ],
      "default": "BYTE_ORDER_UNSPECIFIED",
      "description": "- BYTE_ORDER_UNSPECIFIED: BYTE_ORDER_UNSPECIFIED is the default value of this type.\n - BYTE_ORDER_LITTLE_ENDIAN: Little Endian byte order\n - BYTE_ORDER_BIG_ENDIAN: Big Endian byte order",
      "title": "Byte order of multi-byte data"
    },
    "v1ListModelsResponse": {
      "type": "object",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ModelInfo"
          },
          "description": "List of models available for use on Privacy Screen server."
        }
      },
      "description": "The message returned to the client by the `ListModels` method."
    },
    "v1ModelAttributes": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string",
          "description": "Language of the model."
        },
        "phoneSet": {
          "$ref": "#/definitions/v1PhoneSet",
          "description": "The set of phonemes this model uses to represent how words should be pronounced."
        },
        "nativeAudioFormat": {
          "$ref": "#/definitions/v1AudioFormat",
          "description": "Native audio format of the model. This will be use as default value if audio format\nin `SynthesisConfig` is not specify."
        },
        "supportedFeatures": {
          "$ref": "#/definitions/v1ModelFeatures",
          "description": "Supported model features."
        },
        "speakers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SpeakerInfo"
          },
          "description": "List of speaker available for use in this model."
        }
      },
      "title": "Attributes of a VoiceGen Model"
    },
    "v1ModelFeatures": {
      "type": "object",
      "properties": {
        "speechRate": {
          "type": "boolean",
          "description": "This is set to true if the model can be configured to synthesize audio at different\ntalking speeds."
        },
        "variationScale": {
          "type": "boolean",
          "description": "This is set to true if the model can be configured to synthesize audio for a given\ntext input differently than usual by varying stresses, and emphasis on different\nparts of the audio. This feature is useful for making the audio sound slightly\ndifferent each time to avoid making it feel monotonous."
        }
      }
    },
    "v1ModelInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the model. This identifier is used to choose the model\nthat should be used for synthesis, and is specified in the\n`SynthesisConfig` message."
        },
        "name": {
          "type": "string",
          "description": "Model name. This is a concise name describing the model, and may be\npresented to the end-user, for example, to help choose which model to use\nfor their synthesis task."
        },
        "attributes": {
          "$ref": "#/definitions/v1ModelAttributes",
          "description": "Model attributes."
        }
      },
      "title": "Description of a Cobalt VoiceGen Model"
    },
    "v1PhoneSet": {
      "type": "string",
      "enum": [
        "PHONE_SET_UNSPECIFIED",
        "PHONE_SET_IPA",
        "PHONE_SET_XSAMPA",
        "PHONE_SET_ARPABET"
      ],
      "default": "PHONE_SET_UNSPECIFIED",
      "description": "PhoneSet is a set of phonemes for words pronunciation.\n\n - PHONE_SET_UNSPECIFIED: PHONE_SET_UNSPECIFIED is the default value of this type.\n - PHONE_SET_IPA: IPA phoneme set\n - PHONE_SET_XSAMPA: X-SAMPA phoneme set\n - PHONE_SET_ARPABET: ARPAbet phoneme set"
    },
    "v1SpeakerAttributes": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string",
          "description": "Language of the speaker. This can be different from model language.\nE.g. an english model with different accents: en-US, en-GB, en-IN etc."
        }
      },
      "title": "Attributes of a speaker"
    },
    "v1SpeakerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the speaker. This identifier is used to choose the speaker\nthat should be used for synthesis, and is specified in the\n`SynthesisConfig` message."
        },
        "name": {
          "type": "string",
          "description": "Speaker name. This is a concise name describing the speaker, and may be\npresented to the end-user, for example, to help choose which speaker to use\nfor their synthesis task."
        },
        "description": {
          "type": "string",
          "description": "Speaker description. This is may be presented to the end-user, for example, to\nhelp choose which speaker to use for their synthesis task."
        },
        "attributes": {
          "$ref": "#/definitions/v1SpeakerAttributes",
          "description": "Speaker attributes."
        }
      },
      "title": "Description of a speaker"
    },
    "v1StreamingSynthesizeResponse": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#/definitions/v1SynthesizedAudio"
        }
      },
      "description": "The top-level message sent by the server for the `StreamingSynthesize`\nmethod. In this streaming call, multiple `StreamingSynthesizeResponse`\nmessages contain `SynthesizedAudio`."
    },
    "v1SynthesisConfig": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "description": "Unique identifier of the model to use, as obtained from a `ModelInfo` message."
        },
        "speakerId": {
          "type": "string",
          "description": "Unique identifier of the speaker to use, as obtained from a `SpeakerInfo` message."
        },
        "audioFormat": {
          "$ref": "#/definitions/v1AudioFormat",
          "description": "Format of the audio to be sent for synthesis. If no value specify, default value\nof native audio format of the specified model will be used. Native audio format\ncan be obtained from `ModelAttributes` message."
        },
        "speechRate": {
          "type": "number",
          "format": "float",
          "description": "The speech rate for synthesized audio. If unset, then the default speech rate of\na given model is used. Otherwise a value \u003e 0 should be used, with higher values\nresulting in faster speech. This field only has an effect on the synthesized audio\nif the model supports it, which can be ascertained from the\n`ModelAttributes.supported_features`."
        },
        "variationScale": {
          "type": "number",
          "format": "float",
          "description": "A scale with values \u003e 0, to determine how much to randomly vary the synthesized\naudio by altering stresses and emphasis on different parts of the audio. Higher\nvalues correspond to greater variation. This field only has an affect on the\nsynthesized audio if the model supports it, which can be ascertained from the\n`ModelAttributes.supported_features`."
        }
      },
      "title": "Configuration for setting up a Synthesizer"
    },
    "v1SynthesisText": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      },
      "title": "Text input to be sent to the synthesizer"
    },
    "v1SynthesizedAudio": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Synthesize audio from the synthesizer"
    },
    "v1VersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of the server handling these requests."
        }
      },
      "description": "The top-level message sent by the server for the `Version` method."
    }
  }
}
