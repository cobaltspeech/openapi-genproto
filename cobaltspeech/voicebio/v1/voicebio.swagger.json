{
  "swagger": "2.0",
  "info": {
    "title": "cobaltspeech/voicebio/v1/voicebio.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "VoiceBioService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/voicebio/v1/list-models": {
      "get": {
        "summary": "Returns information about the models available on the server.",
        "operationId": "VoiceBioService_ListModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListModelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VoiceBioService"
        ]
      }
    },
    "/api/voicebio/v1/streaming-enroll": {
      "get": {
        "summary": "Uses new audio data to perform enrollment of new users, or to update\nenrollment of existing users. Returns a new or updated voiceprint.",
        "description": "Clients should store the returned voiceprint against the ID of the user\nthat provided the audio. This voiceprint can be provided later, with the\nVerify or Identify requests to match new audio against known speakers.\n\nIf this call is used to update an existing user's voiceprint, the old\nvoiceprint can be discarded and only the new one can be stored for that\nuser.",
        "operationId": "VoiceBioService_StreamingEnroll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StreamingEnrollResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "config.modelId",
            "description": "ID of the model to use for enrollment. A list of supported IDs can be found\nusing the `ListModels` call.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.encoding",
            "description": "Encoding of the samples. It must be specified explicitly and using the\ndefault value of `AUDIO_ENCODING_UNSPECIFIED` will result in an error.\n\n - AUDIO_ENCODING_UNSPECIFIED: AUDIO_ENCODING_UNSPECIFIED is the default value of this type and will\nresult in an error.\n - AUDIO_ENCODING_SIGNED: PCM signed-integer\n - AUDIO_ENCODING_UNSIGNED: PCM unsigned-integer\n - AUDIO_ENCODING_IEEE_FLOAT: PCM IEEE-Float\n - AUDIO_ENCODING_ULAW: G.711 mu-law\n - AUDIO_ENCODING_ALAW: G.711 a-law",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDIO_ENCODING_UNSPECIFIED",
              "AUDIO_ENCODING_SIGNED",
              "AUDIO_ENCODING_UNSIGNED",
              "AUDIO_ENCODING_IEEE_FLOAT",
              "AUDIO_ENCODING_ULAW",
              "AUDIO_ENCODING_ALAW"
            ],
            "default": "AUDIO_ENCODING_UNSPECIFIED"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.bitDepth",
            "description": "Bit depth of each sample (e.g. 8, 16, 24, 32, etc.). This is a required\nfield.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.byteOrder",
            "description": "Byte order of the samples. This field must be set to a value other than\n`BYTE_ORDER_UNSPECIFIED` when the `bit_depth` is greater than 8.\n\n - BYTE_ORDER_UNSPECIFIED: BYTE_ORDER_UNSPECIFIED is the default value of this type.\n - BYTE_ORDER_LITTLE_ENDIAN: Little Endian byte order\n - BYTE_ORDER_BIG_ENDIAN: Big Endian byte order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BYTE_ORDER_UNSPECIFIED",
              "BYTE_ORDER_LITTLE_ENDIAN",
              "BYTE_ORDER_BIG_ENDIAN"
            ],
            "default": "BYTE_ORDER_UNSPECIFIED"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.sampleRate",
            "description": "Sampling rate in Hz. This is a required field.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.channels",
            "description": "Number of channels present in the audio. E.g.: 1 (mono), 2 (stereo), etc.\nThis is a required field.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.audioFormatHeadered",
            "description": "Audio has a self-describing header. Headers are expected to be sent at\nthe beginning of the entire audio file/stream, and not in every\n`Audio` message.\n\nThe default value of this type is AUDIO_FORMAT_HEADERED_UNSPECIFIED. If\nthis value is used, the server may attempt to detect the format of the\naudio. However, it is recommended that the exact format be specified.\n\n - AUDIO_FORMAT_HEADERED_UNSPECIFIED: AUDIO_FORMAT_HEADERED_UNSPECIFIED is the default value of this type.\n - AUDIO_FORMAT_HEADERED_WAV: WAV with RIFF headers\n - AUDIO_FORMAT_HEADERED_MP3: MP3 format with a valid frame header at the beginning of data\n - AUDIO_FORMAT_HEADERED_FLAC: FLAC format\n - AUDIO_FORMAT_HEADERED_OGG_OPUS: Opus format with OGG header",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDIO_FORMAT_HEADERED_UNSPECIFIED",
              "AUDIO_FORMAT_HEADERED_WAV",
              "AUDIO_FORMAT_HEADERED_MP3",
              "AUDIO_FORMAT_HEADERED_FLAC",
              "AUDIO_FORMAT_HEADERED_OGG_OPUS"
            ],
            "default": "AUDIO_FORMAT_HEADERED_UNSPECIFIED"
          },
          {
            "name": "config.previousVoiceprint.data",
            "description": "Voiceprint data serialized to a string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "audio.data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "VoiceBioService"
        ]
      }
    },
    "/api/voicebio/v1/streaming-identify": {
      "get": {
        "summary": "Compares audio data against the provided list of voiceprints and identifies\nwhich (or none) of the voiceprints is a match for the given audio.",
        "operationId": "VoiceBioService_StreamingIdentify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StreamingIdentifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "config.modelId",
            "description": "ID of the model to use for identification. A list of supported IDs can be\nfound using the `ListModels` call. The model used for identification must\nmatch with the model used for enrollment.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.encoding",
            "description": "Encoding of the samples. It must be specified explicitly and using the\ndefault value of `AUDIO_ENCODING_UNSPECIFIED` will result in an error.\n\n - AUDIO_ENCODING_UNSPECIFIED: AUDIO_ENCODING_UNSPECIFIED is the default value of this type and will\nresult in an error.\n - AUDIO_ENCODING_SIGNED: PCM signed-integer\n - AUDIO_ENCODING_UNSIGNED: PCM unsigned-integer\n - AUDIO_ENCODING_IEEE_FLOAT: PCM IEEE-Float\n - AUDIO_ENCODING_ULAW: G.711 mu-law\n - AUDIO_ENCODING_ALAW: G.711 a-law",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDIO_ENCODING_UNSPECIFIED",
              "AUDIO_ENCODING_SIGNED",
              "AUDIO_ENCODING_UNSIGNED",
              "AUDIO_ENCODING_IEEE_FLOAT",
              "AUDIO_ENCODING_ULAW",
              "AUDIO_ENCODING_ALAW"
            ],
            "default": "AUDIO_ENCODING_UNSPECIFIED"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.bitDepth",
            "description": "Bit depth of each sample (e.g. 8, 16, 24, 32, etc.). This is a required\nfield.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.byteOrder",
            "description": "Byte order of the samples. This field must be set to a value other than\n`BYTE_ORDER_UNSPECIFIED` when the `bit_depth` is greater than 8.\n\n - BYTE_ORDER_UNSPECIFIED: BYTE_ORDER_UNSPECIFIED is the default value of this type.\n - BYTE_ORDER_LITTLE_ENDIAN: Little Endian byte order\n - BYTE_ORDER_BIG_ENDIAN: Big Endian byte order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BYTE_ORDER_UNSPECIFIED",
              "BYTE_ORDER_LITTLE_ENDIAN",
              "BYTE_ORDER_BIG_ENDIAN"
            ],
            "default": "BYTE_ORDER_UNSPECIFIED"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.sampleRate",
            "description": "Sampling rate in Hz. This is a required field.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.channels",
            "description": "Number of channels present in the audio. E.g.: 1 (mono), 2 (stereo), etc.\nThis is a required field.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.audioFormatHeadered",
            "description": "Audio has a self-describing header. Headers are expected to be sent at\nthe beginning of the entire audio file/stream, and not in every\n`Audio` message.\n\nThe default value of this type is AUDIO_FORMAT_HEADERED_UNSPECIFIED. If\nthis value is used, the server may attempt to detect the format of the\naudio. However, it is recommended that the exact format be specified.\n\n - AUDIO_FORMAT_HEADERED_UNSPECIFIED: AUDIO_FORMAT_HEADERED_UNSPECIFIED is the default value of this type.\n - AUDIO_FORMAT_HEADERED_WAV: WAV with RIFF headers\n - AUDIO_FORMAT_HEADERED_MP3: MP3 format with a valid frame header at the beginning of data\n - AUDIO_FORMAT_HEADERED_FLAC: FLAC format\n - AUDIO_FORMAT_HEADERED_OGG_OPUS: Opus format with OGG header",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDIO_FORMAT_HEADERED_UNSPECIFIED",
              "AUDIO_FORMAT_HEADERED_WAV",
              "AUDIO_FORMAT_HEADERED_MP3",
              "AUDIO_FORMAT_HEADERED_FLAC",
              "AUDIO_FORMAT_HEADERED_OGG_OPUS"
            ],
            "default": "AUDIO_FORMAT_HEADERED_UNSPECIFIED"
          },
          {
            "name": "audio.data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "VoiceBioService"
        ]
      }
    },
    "/api/voicebio/v1/streaming-verify": {
      "get": {
        "summary": "Compares audio data against the provided voiceprint and verifies whether or\nnot the audio matches against the voiceprint.",
        "operationId": "VoiceBioService_StreamingVerify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StreamingVerifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "config.modelId",
            "description": "ID of the model to use for verification. A list of supported IDs can be\nfound using the `ListModels` call. The model used for verification must\nmatch with the model used for enrollment.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.encoding",
            "description": "Encoding of the samples. It must be specified explicitly and using the\ndefault value of `AUDIO_ENCODING_UNSPECIFIED` will result in an error.\n\n - AUDIO_ENCODING_UNSPECIFIED: AUDIO_ENCODING_UNSPECIFIED is the default value of this type and will\nresult in an error.\n - AUDIO_ENCODING_SIGNED: PCM signed-integer\n - AUDIO_ENCODING_UNSIGNED: PCM unsigned-integer\n - AUDIO_ENCODING_IEEE_FLOAT: PCM IEEE-Float\n - AUDIO_ENCODING_ULAW: G.711 mu-law\n - AUDIO_ENCODING_ALAW: G.711 a-law",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDIO_ENCODING_UNSPECIFIED",
              "AUDIO_ENCODING_SIGNED",
              "AUDIO_ENCODING_UNSIGNED",
              "AUDIO_ENCODING_IEEE_FLOAT",
              "AUDIO_ENCODING_ULAW",
              "AUDIO_ENCODING_ALAW"
            ],
            "default": "AUDIO_ENCODING_UNSPECIFIED"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.bitDepth",
            "description": "Bit depth of each sample (e.g. 8, 16, 24, 32, etc.). This is a required\nfield.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.byteOrder",
            "description": "Byte order of the samples. This field must be set to a value other than\n`BYTE_ORDER_UNSPECIFIED` when the `bit_depth` is greater than 8.\n\n - BYTE_ORDER_UNSPECIFIED: BYTE_ORDER_UNSPECIFIED is the default value of this type.\n - BYTE_ORDER_LITTLE_ENDIAN: Little Endian byte order\n - BYTE_ORDER_BIG_ENDIAN: Big Endian byte order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BYTE_ORDER_UNSPECIFIED",
              "BYTE_ORDER_LITTLE_ENDIAN",
              "BYTE_ORDER_BIG_ENDIAN"
            ],
            "default": "BYTE_ORDER_UNSPECIFIED"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.sampleRate",
            "description": "Sampling rate in Hz. This is a required field.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.audioFormatRaw.channels",
            "description": "Number of channels present in the audio. E.g.: 1 (mono), 2 (stereo), etc.\nThis is a required field.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "config.audioFormat.audioFormatHeadered",
            "description": "Audio has a self-describing header. Headers are expected to be sent at\nthe beginning of the entire audio file/stream, and not in every\n`Audio` message.\n\nThe default value of this type is AUDIO_FORMAT_HEADERED_UNSPECIFIED. If\nthis value is used, the server may attempt to detect the format of the\naudio. However, it is recommended that the exact format be specified.\n\n - AUDIO_FORMAT_HEADERED_UNSPECIFIED: AUDIO_FORMAT_HEADERED_UNSPECIFIED is the default value of this type.\n - AUDIO_FORMAT_HEADERED_WAV: WAV with RIFF headers\n - AUDIO_FORMAT_HEADERED_MP3: MP3 format with a valid frame header at the beginning of data\n - AUDIO_FORMAT_HEADERED_FLAC: FLAC format\n - AUDIO_FORMAT_HEADERED_OGG_OPUS: Opus format with OGG header",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AUDIO_FORMAT_HEADERED_UNSPECIFIED",
              "AUDIO_FORMAT_HEADERED_WAV",
              "AUDIO_FORMAT_HEADERED_MP3",
              "AUDIO_FORMAT_HEADERED_FLAC",
              "AUDIO_FORMAT_HEADERED_OGG_OPUS"
            ],
            "default": "AUDIO_FORMAT_HEADERED_UNSPECIFIED"
          },
          {
            "name": "config.voiceprint.data",
            "description": "Voiceprint data serialized to a string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "audio.data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "VoiceBioService"
        ]
      }
    },
    "/api/voicebio/v1/version": {
      "get": {
        "summary": "Returns version information from the server.",
        "operationId": "VoiceBioService_Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VoiceBioService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Audio": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Audio to be sent to VoiceBio."
    },
    "v1AudioEncoding": {
      "type": "string",
      "enum": [
        "AUDIO_ENCODING_UNSPECIFIED",
        "AUDIO_ENCODING_SIGNED",
        "AUDIO_ENCODING_UNSIGNED",
        "AUDIO_ENCODING_IEEE_FLOAT",
        "AUDIO_ENCODING_ULAW",
        "AUDIO_ENCODING_ALAW"
      ],
      "default": "AUDIO_ENCODING_UNSPECIFIED",
      "description": "The encoding of the audio data to be sent for recognition.\n\n - AUDIO_ENCODING_UNSPECIFIED: AUDIO_ENCODING_UNSPECIFIED is the default value of this type and will\nresult in an error.\n - AUDIO_ENCODING_SIGNED: PCM signed-integer\n - AUDIO_ENCODING_UNSIGNED: PCM unsigned-integer\n - AUDIO_ENCODING_IEEE_FLOAT: PCM IEEE-Float\n - AUDIO_ENCODING_ULAW: G.711 mu-law\n - AUDIO_ENCODING_ALAW: G.711 a-law"
    },
    "v1AudioFormat": {
      "type": "object",
      "properties": {
        "audioFormatRaw": {
          "$ref": "#/definitions/v1AudioFormatRAW",
          "title": "Audio is raw data without any headers"
        },
        "audioFormatHeadered": {
          "$ref": "#/definitions/v1AudioFormatHeadered",
          "description": "Audio has a self-describing header. Headers are expected to be sent at\nthe beginning of the entire audio file/stream, and not in every\n`Audio` message.\n\nThe default value of this type is AUDIO_FORMAT_HEADERED_UNSPECIFIED. If\nthis value is used, the server may attempt to detect the format of the\naudio. However, it is recommended that the exact format be specified."
        }
      },
      "description": "Format of the audio to be sent for recognition.\n\nDepending on how they are configured, server instances of this service may\nnot support all the formats provided in the API. One format that is\nguaranteed to be supported is the RAW format with little-endian 16-bit\nsigned samples with the sample rate matching that of the model being\nrequested."
    },
    "v1AudioFormatHeadered": {
      "type": "string",
      "enum": [
        "AUDIO_FORMAT_HEADERED_UNSPECIFIED",
        "AUDIO_FORMAT_HEADERED_WAV",
        "AUDIO_FORMAT_HEADERED_MP3",
        "AUDIO_FORMAT_HEADERED_FLAC",
        "AUDIO_FORMAT_HEADERED_OGG_OPUS"
      ],
      "default": "AUDIO_FORMAT_HEADERED_UNSPECIFIED",
      "title": "- AUDIO_FORMAT_HEADERED_UNSPECIFIED: AUDIO_FORMAT_HEADERED_UNSPECIFIED is the default value of this type.\n - AUDIO_FORMAT_HEADERED_WAV: WAV with RIFF headers\n - AUDIO_FORMAT_HEADERED_MP3: MP3 format with a valid frame header at the beginning of data\n - AUDIO_FORMAT_HEADERED_FLAC: FLAC format\n - AUDIO_FORMAT_HEADERED_OGG_OPUS: Opus format with OGG header"
    },
    "v1AudioFormatRAW": {
      "type": "object",
      "properties": {
        "encoding": {
          "$ref": "#/definitions/v1AudioEncoding",
          "description": "Encoding of the samples. It must be specified explicitly and using the\ndefault value of `AUDIO_ENCODING_UNSPECIFIED` will result in an error."
        },
        "bitDepth": {
          "type": "integer",
          "format": "int64",
          "description": "Bit depth of each sample (e.g. 8, 16, 24, 32, etc.). This is a required\nfield."
        },
        "byteOrder": {
          "$ref": "#/definitions/v1ByteOrder",
          "description": "Byte order of the samples. This field must be set to a value other than\n`BYTE_ORDER_UNSPECIFIED` when the `bit_depth` is greater than 8."
        },
        "sampleRate": {
          "type": "integer",
          "format": "int64",
          "description": "Sampling rate in Hz. This is a required field."
        },
        "channels": {
          "type": "integer",
          "format": "int64",
          "description": "Number of channels present in the audio. E.g.: 1 (mono), 2 (stereo), etc.\nThis is a required field."
        }
      },
      "title": "Details of audio in raw format"
    },
    "v1ByteOrder": {
      "type": "string",
      "enum": [
        "BYTE_ORDER_UNSPECIFIED",
        "BYTE_ORDER_LITTLE_ENDIAN",
        "BYTE_ORDER_BIG_ENDIAN"
      ],
      "default": "BYTE_ORDER_UNSPECIFIED",
      "description": "- BYTE_ORDER_UNSPECIFIED: BYTE_ORDER_UNSPECIFIED is the default value of this type.\n - BYTE_ORDER_LITTLE_ENDIAN: Little Endian byte order\n - BYTE_ORDER_BIG_ENDIAN: Big Endian byte order",
      "title": "Byte order of multi-byte data"
    },
    "v1EnrollmentConfig": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "description": "ID of the model to use for enrollment. A list of supported IDs can be found\nusing the `ListModels` call."
        },
        "audioFormat": {
          "$ref": "#/definitions/v1AudioFormat",
          "description": "Format of the audio to be sent for enrollment."
        },
        "previousVoiceprint": {
          "$ref": "#/definitions/v1Voiceprint",
          "description": "Empty string for new users. For re-enrolling additional users with new\naudio data, set this to that user's previous voiceprint. The previous\nvoiceprint needs to have been generated using the same model as specified\nin this config."
        }
      },
      "description": "Configuration for Enrollment of speakers."
    },
    "v1EnrollmentStatus": {
      "type": "object",
      "properties": {
        "enrollmentComplete": {
          "type": "boolean",
          "description": "Whether sufficient data has been provided as part of this user's\nenrollment. If this is false, more audio should be collected from the user\nand re-enrollment should be done. If this is true, it is still OK to enroll\nmore data for the same user to update the voiceprint."
        },
        "additionalAudioRequiredSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "If enrollment is not yet complete, how many more seconds of user's speech\nare required to complete the enrollment. If enrollment is completed\nsuccessfully, this value will be set to 0."
        }
      },
      "description": "The message returned as part of StreamingEnrollResponse, to provide\ninformation about whether voiceprint is sufficiently trained."
    },
    "v1IdentificationConfig": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "description": "ID of the model to use for identification. A list of supported IDs can be\nfound using the `ListModels` call. The model used for identification must\nmatch with the model used for enrollment."
        },
        "audioFormat": {
          "$ref": "#/definitions/v1AudioFormat",
          "description": "Format of the audio to be sent for enrollment."
        },
        "voiceprints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Voiceprint"
          },
          "description": "Voiceprints of potential speakers that need to be identified in the given\naudio."
        }
      },
      "description": "Configuration for Identification of a speaker."
    },
    "v1ListModelsResponse": {
      "type": "object",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Model"
          },
          "description": "List of models available for use that match the request."
        }
      },
      "description": "The message returned to the client by the `ListModels` method."
    },
    "v1Model": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the model. This identifier is used to choose the model\nthat should be used for enrollment, verification or identification\nrequests. This ID needs to be specified in the respective config messages\nfor these requests."
        },
        "name": {
          "type": "string",
          "description": "Model name. This is a concise name describing the model, and may be\npresented to the end-user, for example, to help choose which model to use\nfor their voicebio task."
        },
        "attributes": {
          "$ref": "#/definitions/v1ModelAttributes",
          "title": "Model Attributes"
        }
      },
      "description": "Description of a VoiceBio model."
    },
    "v1ModelAttributes": {
      "type": "object",
      "properties": {
        "sampleRate": {
          "type": "integer",
          "format": "int64",
          "title": "Audio sample rate (native) supported by the model"
        }
      },
      "title": "Attributes of a VoiceBio model"
    },
    "v1StreamingEnrollResponse": {
      "type": "object",
      "properties": {
        "voiceprint": {
          "$ref": "#/definitions/v1Voiceprint"
        },
        "enrollmentStatus": {
          "$ref": "#/definitions/v1EnrollmentStatus"
        }
      },
      "description": "The message returned by the server for the `StreamingEnroll` method."
    },
    "v1StreamingIdentifyResponse": {
      "type": "object",
      "properties": {
        "bestMatchIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index (0-based) of the best matching voiceprint in the list of input\nvoiceprints provided in the `IdentificationConfig` message. If none of the\nvoiceprints was a match, a negative value is returned."
        },
        "voiceprintComparisonResults": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VoiceprintComparisonResult"
          },
          "description": "Result of comparing the given audio against each of the input voiceprints.\nThe order of this list is the same as the input voiceprint list provided in\nthe `IdentificationConfig` message."
        }
      },
      "description": "The message returned by the server for the `StreamingIdentify` method."
    },
    "v1StreamingVerifyResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/v1VoiceprintComparisonResult"
        }
      },
      "description": "The message returned by the server for the `StreamingVerify` method."
    },
    "v1VerificationConfig": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "description": "ID of the model to use for verification. A list of supported IDs can be\nfound using the `ListModels` call. The model used for verification must\nmatch with the model used for enrollment."
        },
        "audioFormat": {
          "$ref": "#/definitions/v1AudioFormat",
          "description": "Format of the audio to be sent for enrollment."
        },
        "voiceprint": {
          "$ref": "#/definitions/v1Voiceprint",
          "description": "Voiceprint with which audio should be compared."
        }
      },
      "description": "Configuration for Verification of a speaker."
    },
    "v1VersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of the server handling these requests."
        }
      },
      "description": "The message sent by the server for the `Version` method."
    },
    "v1Voiceprint": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Voiceprint data serialized to a string."
        }
      },
      "description": "Voiceprint extracted from user's audio."
    },
    "v1VoiceprintComparisonResult": {
      "type": "object",
      "properties": {
        "isMatch": {
          "type": "boolean",
          "description": "Whether or not the audio successfully matches with the provided voiceprint."
        },
        "similarityScore": {
          "type": "number",
          "format": "float",
          "description": "Similarity score representing how closely the audio matched against the\nvoiceprint. This score could be any negative or positive number. Lower\nvalue suggests that the audio and voiceprints are less similar, whereas a\nhigher value indicates more similarity. The `is_match` field can be used to\nactually decide if the result should be considered a valid match."
        }
      },
      "description": "Message describing the result of comparing a voiceprint against given audio."
    }
  }
}
